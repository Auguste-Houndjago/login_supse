generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enumérations
enum Role {
  PATIENT
  MEDECIN
  ADMIN
  SECRETAIRE
}

enum Statut {
  en_attente
  confirme
  annule
  termine
}

enum Specialite {
  MEDECINE_GENERALE
  CARDIOLOGIE
  DERMATOLOGIE
  PEDIATRIE
  GYNECOLOGIE
  NEUROLOGIE
  OPHTALMOLOGIE
  ORTHOPEDIE
}

enum TypeRendezVousEnum {
  CONSULTATION
  SUIVI
  URGENCE
  TELECONSULTATION
}

//
// Modèles principaux
//

model User {
  id             String    @id @default(uuid())
  email          String    @unique
  nom            String
  prenom         String
  avatarUrl      String?
  telephone      String
  dateNaissance  DateTime
  adresse        String
  age            Int?
  role           Role      @default(PATIENT)
  meta           Json?
  createdAt      DateTime  @default(now()) @map("created_at")

  // Relations
  patient        Patient?
  medecin        Medecin?
}

model Patient {
  id         String      @id @map("user_id") // Même ID que User
  meta       Json?

  user       User        @relation(fields: [id], references: [id])
  rendezVous RendezVous[]

  @@map("patients")
}

model Medecin {
  id               String           @id @map("user_id") // Même ID que User
  specialite       Specialite       @default(MEDECINE_GENERALE)
  description      String?
  indisponibilites Json?
  meta             Json?

  user             User             @relation(fields: [id], references: [id])
  rendezVous       RendezVous[]
  disponibilites   Disponibilite[]

  @@map("medecins")
}

model RendezVous {
  id            String   @id @default(uuid())
  patientId     String   @map("patient_id")
  medecinId     String   @map("medecin_id")

  type          TypeRendezVousEnum
  dateDebut     DateTime
  dateFin       DateTime?
  motif         String
  statut        Statut   @default(en_attente)
  historique    Json?
  meta          Json?
  createdAt     DateTime @default(now()) @map("created_at")

  // Relations
  patient       Patient  @relation(fields: [patientId], references: [id])
  medecin       Medecin  @relation(fields: [medecinId], references: [id])

  @@map("rendez_vous")
}

model Disponibilite {
  id         String               @id @default(uuid())
  medecinId  String               @map("medecin_id")
  heureDebut DateTime
  heureFin   DateTime
  status     DisponibiliteStatus
  meta       Json?

  medecin    Medecin              @relation(fields: [medecinId], references: [id])

  @@map("disponibilites")
}


enum DisponibiliteStatus {
  LIBRE
  RESERVE
  ANNULE
}
